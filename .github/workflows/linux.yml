on:
  push:
  pull_request:
jobs:
  # We need to build our own sccache until e6326bc8a20ee06af37e16a3a7a14e3374c66c66
  # is in a released version.
  sccache:
    runs-on: 'ubuntu-20.04'
    steps:
      - name: Install System Dependencies
        run: |
          sudo apt update
          sudo apt install -y --no-install-recommends musl-tools

      - uses: actions-rs/toolchain@v1
        id: install-rust
        with:
          toolchain: stable
          target: x86_64-unknown-linux-musl
          default: true
          profile: minimal

      - uses: actions/checkout@v2
        with:
          repository: indygreg/sccache
          ref: b0eae3f0d174b81e7582159cb9329dbea0af25c9
          fetch-depth: 0

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-20.04-${{ steps.install-rust.outputs.rustc}}-sccache-${{ hashFiles('Cargo.lock') }}

      - name: Build sccache
        run: |
          cargo build --release --target x86_64-unknown-linux-musl

      - name: Upload sccache executable
        uses: actions/upload-artifact@v2
        with:
          name: sccache
          path: target/x86_64-unknown-linux-musl/release/sccache

  pythonbuild:
    runs-on: 'ubuntu-20.04'
    steps:
      - uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          profile: minimal

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-pythonbuild-${{ hashFiles('Cargo.lock') }}

      - name: Build
        run: |
          cargo build --release

      - name: Upload pythonbuild Executable
        uses: actions/upload-artifact@v2
        with:
          name: pythonbuild
          path: target/release/pythonbuild

  toolchain:
    needs:
      - sccache
    runs-on: 'ubuntu-20.04'
    env:
      SCCACHE_DIR: ${{ github.workspace }}/.sccache
    steps:
      - uses: actions/checkout@v2

      - name: Cache build dir
        uses: pat-s/always-upload-cache@v2.1.3
        with:
          path: build/*.tar
          key: ${{ runner.os }}-${{ github.run_id }}
          restore-keys: ${{ runner.os }}-

      - name: Cache sccache dir
        uses: pat-s/always-upload-cache@v2.1.3
        with:
          path: ${{ github.workspace }}/.sccache
          key: ${{ runner.os }}-${{ github.run_id }}
          restore-keys: ${{ runner.os }}-

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Download sccache
        uses: actions/download-artifact@v2
        with:
          name: sccache

      - name: Start sccache
        run: |
          chmod +x sccache
          ls -l $SCCACHE_DIR || true
          ./sccache --start-server

      - name: Build
        run: |
          python3.9 ./build-linux.py --make-target toolchain

      - name: Stop sccache
        run: |
          ./sccache --stop-server || true

      - name: Upload Toolchain Archive
        uses: actions/upload-artifact@v2
        with:
          name: toolchain
          path: build/*.tar

  build:
    strategy:
      fail-fast: false
      matrix:
        triple:
          - 'i686-unknown-linux-gnu'
          - 'x86_64-unknown-linux-gnu'
          - 'aarch64-unknown-linux-gnu'
          - 'arm-unknown-linux-gnueabihf'
        py:
          - 'cpython-3.8'
        optimizations:
          - 'noopt'

    needs:
      - pythonbuild
      - toolchain
    runs-on: 'ubuntu-20.04'
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Download pythonbuild
        uses: actions/download-artifact@v2
        with:
          name: pythonbuild
          path: build

      - name: Download toolchain
        uses: actions/download-artifact@v2
        with:
          name: toolchain
          path: build

      - name: Build
        run: |
          if [ "${{ matrix.triple }}" = "x86_64-unknown-linux-musl" ]; then
            EXTRA_ARGS=--libressl
          else
            EXTRA_ARGS=
          fi

          ./build-linux.py --skip-toolchain --target-triple ${{ matrix.triple }} --python ${{ matrix.py }} --optimizations ${{ matrix.optimizations }} ${EXTRA_ARGS}

      - name: Validate Distribution
        if: ${{ matrix.triple }} == 'x86_64-unknown-linux-gnu'
        run: |
          chmod +x build/pythonbuild
          build/pythonbuild validate-distribution dist/*.tar.zst || true

      - name: Upload Distribution
        uses: actions/upload-artifact@v2
        with:
          name: dists-linux
          path: dist/*
